filter {
    if [type] == "wmisserver" {
        grok {
            match => {
                "message" => "%{TIMESTAMP_ISO8601:timestamp} %{WORD:dstIndicator} \[%{DATA:reason}\] %{GREEDYDATA:eventMessage}"
            }
        }
        date {
            match => [ "timestamp", "yyyy-MM-dd HH:mm:ss" ]
        }
        mutate {
            remove_field => ['dstIndicator']
            replace => { "[@metadata][index]" => "webmethods-%{+YYYY.MM}" }
        }
    }
    if [type] == "wmisosgi" {
        grok {
            match => {
                "message" => ["\[%{DATA:eventCategory}\] %{TIMESTAMP_ISO8601:timestamp} %{WORD:severity}( )?\: %{GREEDYDATA:eventMessage}",
                              "\(%{DATA:eventSource}\) \[%{DATA:eventCategory}\] %{TIMESTAMP_ISO8601:startTime} %{WORD:timeZone} %{WORD:severity}\: %{GREEDYDATA:eventMessage}"
                             ]
            }
        }
        date {
            match => [ "timestamp", "yyyy-MM-dd HH:mm:ss,SSS" ]
        }
        
        mutate {
            remove_field => ['timeZone']
            replace => { "[@metadata][index]" => "webmethods-%{+YYYY.MM}" }
        }
    }
    if [type] == "wmisdberror" {
        grok {
            match => {
                # Minimal matching as we already have the columns assigned to fields.
                # In this case, extract the deviceHostName from the combined host:port of the serverid column
                "serverid" => "%{DATA:deviceHostName}:%{INT:devicePort}"
            }
        }
        date {
            match => [ "audittimestamp", "yyyy-MM-dd HH:mm:ss" ]
        }
        mutate {
            add_field => { "eventMessage" => ['%{errormessage}','%{errstacktrace}']  }
            rename => { "servicename" => "eventSource" }
            # Remove lots of columns that at this point arent overly useful or have been reassigned to another field.
            remove_field => ['devicePort','rootcontextid','parentcontextid','contextid','audittimestamp','inserttimestamp','serverid','msgid','errormessage','servicestack','errstacktrace']
            replace => { "[@metadata][index]" => "-%{+YYYY.MM}" }
        }
    }
    if [type] == "wmisstats" {
        grok {
            match => {
                "message" => "%{TIMESTAMP_ISO8601:startTime} %{WORD:dstIndcator} %{BASE16NUM:statsJvmTotalMem} %{BASE16NUM:statsJvmFreeMem} %{BASE16NUM:statsThreads} %{BASE16NUM:statsThreadsMax} %{BASE16NUM:statsSessions} %{BASE16NUM:statsSessionsMax} %{BASE16NUM:statsSessionsAverage} %{BASE16NUM:statsRequests} %{BASE16NUM:statsRequestsMax} %{BASE16NUM:statsRequestsAverage} %{BASE16NUM:statsRequestStart} %{BASE16NUM:statsRequestEnd}"
            }
        }
        date {
            match => [ "startTime", "yyyy-MM-dd HH:mm:ss" ]
        }
        ruby {
            code => 'event["statsJvmTotalMem"] = event["statsJvmTotalMem"].hex; event["statsJvmFreeMem"] = event["statsJvmFreeMem"].hex; event["statsThreads"] = event["statsThreads"].hex; event["statsThreadsMax"] = event["statsThreadsMax"].hex; event["statsSessions"] = event["statsSessions"].hex; event["statsSessionsMax"] = event["statsSessionsMax"].hex; event["statsSessionsAverage"] = event["statsSessionsAverage"].hex; event["statsRequests"] = event["statsRequests"].hex; event["statsRequestsMax"] = event["statsRequestsMax"].hex; event["statsRequestsAverage"] = event["statsRequestsAverage"].hex; event["statsRequestStart"] = event["statsRequestStart"].hex; event["statsRequestEnd"] = event["statsRequestEnd"].hex;'
        }
        mutate {
            remove_field => ['dstIndcator','startTime']
            replace => { "[@metadata][index]" => "webmethods-%{+YYYY.MM}" }
         }
    }
    if [type] == "wmumnirvana" {
        grok {
            match => {
                "message" => ["\[%{DATA:startTime}\],%{WORD:eventCategory}:%{GREEDYDATA:eventMessage}",
                              "\[%{DATA:startTime}\],%{GREEDYDATA:eventMessage}"
                             ]
            }
        }
        # Fix up the hideous timestamp, dealing with the separation of the year from the rest of the timestamp
        date {
            match => [ "startTime", "EEE MMM dd HH:mm:ss 'GMT' yyyy", "EEE MMM dd HH:mm:ss 'BST' yyyy" ]
            timezone => "Europe/London"
        }
        mutate {
            remove_field => ['startTime']
            replace => { "[@metadata][index]" => "webmethods-%{+YYYY.MM}" }
         }
    }
}